# The collection of applications composing this service
services:

  # This container acts as an Apache webserver and PHP interpreter
  app:
    build:
      context: ./bin/app
      args:
        WWW_DATA_UID: ${UID}
        WWW_DATA_GID: ${GID}
    container_name: app
    restart: always
    # The external port mapping to internal port mapping
    ports:
      - ${HOST_MACHINE_UNSECURE_HOST_PORT}:80 # expose chosen port on host and sent to 80 in container
      - ${HOST_MACHINE_SECURE_HOST_PORT}:443
    # The external directory location to map to an internal location
    volumes:
      - ${DOCUMENT_ROOT-./www}:/var/www/html/${PROJECT_NAME}
      - ${PHP_INI-./config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${VHOSTS_DIR-./config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./logs/apache2}:/var/log/apache2
    environment:
      APACHE_DOCUMENT_ROOT: ${APACHE_DOCUMENT_ROOT-/var/www/html}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      main:
        aliases:
          - ${PROJECT_NAME}.test

  # This container is the MySql database
  database:
    build:
      context: ./bin/db
    container_name: database
    restart: unless-stopped
    command: mysqld --log_error=/var/log/mysql/mysql_error.log --general_log_file=/var/log/mysql/mysql.log --general_log=1 --slow_query_log=1 --slow_query_log_file=/var/log/mysql/mysql_slow.log --long_query_time=2 --log_queries_not_using_indexes=1
    ports:
      - 127.0.0.1:${HOST_MACHINE_MYSQL_PORT}:3306
    networks:
      - main
    volumes:
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./logs/mysql}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

  # This container contains Nodejs dependencies that take care of the JS builds
  node:
    build:
      context: ./bin/node
    container_name: node
    restart: always
    tty: true
    ports:
      - "5173:5173"
    networks:
      - main
    volumes:
      - ${DOCUMENT_ROOT-./www}:/usr/app
    working_dir: /usr/app
    environment:
      HOST: 0.0.0.0
      NODE_ENV: 'development'

  # This container has redis dependencies used for caching
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - ${HOST_MACHINE_REDIS_PORT}:6379
    volumes:
      - ${REDIS_DATA_DIR-./data/redis}:/data
    networks:
      - main
networks:
  main:
    driver: bridge
